version: '3'
services:

  python-backend-api:
    image: getslash/backslash
    command: [
        "dockerize",
        "-timeout", "3600s",
        "-wait", "tcp://db:5432",
        "-wait", "tcp://rabbitmq:5672",
        "-wait", "tcp://api-server:8000",
        "pipenv", "run", "manage", "docker-start",
        "-b", "python-backend-api",
        ]
    volumes: &python-backend-volumes
      - "conf:/conf"
      - "uploads:/uploads"
    environment: &python-backend-env
      - CONFIG_DIRECTORY=/conf
      - BACKSLASH_REDIS_SERVER=redis
      - BACKSLASH_DATABASE_URI=postgresql://backslash:backslash@db/backslash
      - BACKSLASH_TRACEBACKS_PATH=/uploads/tracebacks
      - BACKSLASH_CELERY_BROKER_URL=amqp://guest:guest@rabbitmq
      - METRICS_URL=http://api-server:8000/
    depends_on:
      - db
      - redis
      - api-server
    logging:
      driver: journald

  python-backend-ui:
    image: getslash/backslash
    command: [
        "dockerize",
        "-timeout", "3600s",
        "-wait", "tcp://db:5432",
        "-wait", "tcp://rabbitmq:5672",
        "-wait", "tcp://api-server:8000",
        # This is necessary to avoid a race in configuration directory creation
        "-wait", "tcp://python-backend-api:8000",
        "pipenv", "run", "manage", "docker-start",
        "-b", "python-backend-ui",
        ]
    volumes: *python-backend-volumes
    environment: *python-backend-env
    depends_on:
      - python-backend-api
    logging:
      driver: journald


  worker:
    image: getslash/backslash
    command: dockerize -timeout 3600s -wait tcp://rabbitmq:5672 pipenv run celery -A flask_app.tasks.main worker -B --loglevel=info --max-tasks-per-child=500
    logging:
      driver: journald
    environment:
      - CONFIG_DIRECTORY=/conf
      - BACKSLASH_REDIS_SERVER=redis
      - BACKSLASH_DATABASE_URI=postgresql://backslash:backslash@db/backslash
      - BACKSLASH_TRACEBACKS_PATH=/uploads/tracebacks
      - BACKSLASH_CELERY_BROKER_URL=amqp://guest:guest@rabbitmq
    volumes:
      - "conf:/conf"
      - "uploads:/uploads"

  rabbitmq:
    image: rabbitmq
    logging:
      driver: journald

  db:
    image: "postgres:9.6"
    environment:
      - POSTGRES_USER=backslash
      - POSTGRES_DB=backslash
      - POSTGRES_PASSWORD=backslash
    volumes:
      - "db:/var/lib/postgresql/data"
    logging:
      driver: journald

  redis:
    image: "redis"
    logging:
      driver: journald

  monitor:
    image: "wrouesnel/postgres_exporter"
    environment:
      - DATA_SOURCE_NAME=postgresql://backslash@db:5432/backslash?sslmode=disable
    ports:
      - "9187:9187"
    depends_on:
      - db
    logging:
      driver: journald

  api-server:
    image: getslash/backslash
    command: ["/api-server", "0.0.0.0", "8000"]
    logging:
      driver: journald
    environment:
      - SENTRY_DSN=

  nginx:
    image: getslash/backslash
    volumes:
      - "conf:/conf"
      - "uploads:/uploads"
    environment:
      - BACKSLASH_HOSTNAME=
      - BACKSLASH_USE_SSL=
    command: ["dockerize",
              "-timeout", "3600s",
              "-wait", "http://python-backend-api:8000",
              "-wait", "http://python-backend-ui:8000",
              "-wait", "http://api-server:8000/metrics",
              "pipenv", "run", "manage", "docker-nginx-start"]

    depends_on:
      - python-backend-api
      - python-backend-ui
      - api-server
    ports:
      - "8000:80"
    logging:
      driver: journald

volumes:
  uploads:
  conf:
  db:
